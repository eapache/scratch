schema {
  query: QueryRoot
}

type QueryRoot {
  error: SomeError
  field: String
  field1: String
  field2: String
  field3: String
  field4: String
}

# An unsigned 64-bit integer. Represents whole numeric values between 0 and 2^64 - 1 encoded as a string of base-10 digits.
scalar UnsignedInt64

# Represents an error in the input of a mutation.
type SomeError {
  # The error message.
  message: UnsignedInt64!

  # Path to input field which caused the error.
  field: [String!]

  # Check to see if has
  hasThing(
    # The ID of the thing to check.
    id: ID!
  ): Boolean!
}

# Units of measurements
enum WeightUnit {
  # Metric system
  GRAMS

  # Imperial system
  OUNCES
}

# foo
input DoTheInputDance {
  # bar
  clientMutationId: String
}

# ba
interface SomeInterface {
  # Globally unique identifier.
  id: ID!
  hasThing: Boolean!
}


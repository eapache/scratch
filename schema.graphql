schema {
  query: QueryRoot
}

type QueryRoot {
  error: SomeError
}

# An unsigned 64-bit integer. Represents whole numeric values between 0 and 2^64 - 1 encoded as a string of base-10 digits.
scalar UnsignedInt64

# Represents an error in the input of a mutation.
type SomeError {
  # The error message.
  message: UnsignedInt64!

  # Path to input field which caused the error.
  field: [String!]

  # Check to see if has new
  hasThing(
    # The ID of the thing to check. new
    id: ID!
  ): Boolean!
}

# Units of measurements new
enum WeightUnit {
  # Metric system new
  GRAMS

  # Imperial system
  OUNCES
}

# foo new
input DoTheInputDance {
  # bar new
  clientMutationId: String
}

# ba new
interface SomeInterface {
  # Globally unique identifier. new
  id: ID!
  hasThing(id: ID!): Boolean!
}

